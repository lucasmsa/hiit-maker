# This is a basic workflow to help you get started with Actions
name: CI-CD

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: ['dev']
  pull_request:
    branches: ['dev']
  # # Allows you to run this workflow manually from the Actions tab
  # workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains multiple jobs
  build_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: SonarCloud Scan
        # You may pin to the exact commit or the version.
        # uses: SonarSource/sonarcloud-github-action@de2e56b42aa84d0b1c5b622644ac17e505c9a049
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          projectBaseDir: ./

      - name: setup node
        uses: actions/setup-node@master
        with:
          node-version: ${{ matrix.node-version }}

      # install applicaion dependencies
      - name: Install dependencies
        run: |
          yarn
      # build and test the apps
      - name: Test the app
        run: |
          yarn test
      - name: Build the app
        run: |
          yarn build
      - name: Vercel Action
        # You may pin to the exact commit or the version.
        # uses: amondnet/vercel-action@168e94457309ea2f8b885de5f181c8d79754b263
        uses: amondnet/vercel-action@v25
        with:
          # Vercel token
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          
          github-token: ${{ secrets.ACCOUNT_GITHUB_TOKEN }}
          # if you want to create github deployment, set true, default: false
          github-deployment: true
          
          working-directory: ./

          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          # You can assign a domain to this deployment. Please note that this domain must have been configured in the project. You can use pull request number via `{{PR_NUMBER}}` and branch via `{{BRANCH}}`
          alias-domains: https://hiit-maker.io/
